{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6559f945",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(None, 'Hydrogen', 'Helium', 'Lithum', 'Beryllium', 'Boron', 'Carbon')\n"
     ]
    }
   ],
   "source": [
    "ELEMENTS = (None, 'Hydrogen', 'Helium', 'Lithum', 'Beryllium', 'Boron', 'Carbon')\n",
    "print(ELEMENTS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8d9568f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Parenthesis',\n",
       " 'Exponents',\n",
       " 'Multiplication',\n",
       " 'Divison',\n",
       " 'Addition',\n",
       " 'Substraction']"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "OPERATIONS_ORDER = ['Parenthesis', 'Exponents', 'Multiplication','Divison','Addition', 'Substraction']\n",
    "OPERATIONS_ORDER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "25e6b4c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6, 2.0)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def process_data(data):\n",
    "    start = 0\n",
    "    for number in data:\n",
    "        start+=number\n",
    "    avg = start/len(data)\n",
    "    return (start,avg)\n",
    "process_data([1,2,3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9fceb576",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "[(3, 2, 1), 'cba']\n"
     ]
    }
   ],
   "source": [
    "def flip_keys(to_flip):\n",
    "    to_flip[:]= [i[::-1] for i in to_flip]\n",
    "    return to_flip\n",
    "\n",
    "LIST = [(1, 2, 3),'abc']\n",
    "\n",
    "NEW = flip_keys (LIST)\n",
    "\n",
    "print (LIST is NEW)\n",
    "\n",
    "print (NEW)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2cd0c27b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
